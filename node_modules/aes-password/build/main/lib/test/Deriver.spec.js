"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const Deriver_1 = require("../utils/Deriver");
const Generator_1 = require("../utils/Generator");
const HMAC_KEY_SIZE = 32;
const PASSWORD_KEY_SIZE = 32;
const bits = (PASSWORD_KEY_SIZE + HMAC_KEY_SIZE) * 8;
const ROUNDS = 100000;
(0, ava_1.default)('Reliable pbkdf2 generation', async (t) => {
    //Password with 16 chars
    const pass = await Generator_1.Generator.generateSalt(16);
    const salt = await Generator_1.Generator.generateSalt(12);
    const options = {
        password: pass,
        salt: salt,
        rounds: ROUNDS,
        bits,
    };
    const derived1 = await Deriver_1.Deriver.pbkdf2(options);
    const derived2 = await Deriver_1.Deriver.pbkdf2(options);
    t.deepEqual(derived1, derived2);
});
(0, ava_1.default)('Derive is reliable', async (t) => {
    //Password with 16 chars
    const pass = await Generator_1.Generator.generateSalt(16);
    const salt = await Generator_1.Generator.generateSalt(12);
    const options = {
        password: pass,
        salt: salt,
        rounds: ROUNDS,
    };
    const derived1 = await Deriver_1.Deriver.deriveFromPassword(options);
    const derived2 = await Deriver_1.Deriver.deriveFromPassword(options);
    t.deepEqual(derived1, derived2);
});
